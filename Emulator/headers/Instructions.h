#pragma once

#include "Definitions.h"

static constexpr Byte
	Instruction_ADC_IMM = 0x69,
	Instruction_ADC_ZP  = 0x65,
	Instruction_ADC_ZPC = 0x75,
	Instruction_ADC_ABS = 0x6D,
	Instruction_ADC_ABX = 0x7D,
	Instruction_ADC_INX = 0x61,
	Instruction_ADC_INY = 0x71,
	Instruction_AND_IMM = 0x29, // Complete
	Instruction_AND_ZP  = 0x25,
	Instruction_AND_ZPX = 0x35,
	Instruction_AND_ABS = 0x2D,
	Instruction_AND_ABX = 0x3D,
	Instruction_AND_ABY = 0x39,
	Instruction_AND_INX = 0x21,
	Instruction_AND_INY = 0x31,
	Instruction_ASL_ACC = 0x0A,
	Instruction_ASL_ZP  = 0x06,
	Instruction_ASL_ZPX = 0x16,
	Instruction_ASL_ABS = 0x0E,
	Instruction_ASL_ABX = 0x1E,
	Instruction_BCC_REL = 0x90,
	Instruction_BCS_REL = 0xB0,
	Instruction_BEQ_REL = 0xF0,
	Instruction_BIT_ZP  = 0x24,
	Instruction_BIT_ABS = 0x2C,
	Instruction_BMI_REL = 0x30,
	Instruction_BNE_REL = 0xD0,
	Instruction_BPL_REL = 0x10,
	Instruction_BRK_IMP = 0x00,
	Instruction_BVC_REL = 0x50,
	Instruction_BVS_REL = 0x70,
	Instruction_CLC_IMP = 0x18,
	Instruction_CLD_IMP = 0xD8,
	Instruction_CLI_IMP = 0x58,
	Instruction_CLV_IMP = 0xB8,
	Instruction_CMP_IMM = 0xC9,
	Instruction_CMP_ZP  = 0xC5,
	Instruction_CMP_ABS = 0xCD,
	Instruction_CMP_ABX = 0xDD,
	Instruction_CMP_ABY = 0xD9,
	Instruction_CMP_INX = 0xC1,
	Instruction_CMP_INY = 0xD1,
	Instruction_CPX_IMM = 0xE0,
	Instruction_CPX_ZP  = 0xE4,
	Instruction_CPX_ABS = 0xEC,
	Instruction_CPY_IMM = 0xC0,
	Instruction_CPY_ZP  = 0xC4,
	Instruction_CPY_ABS = 0xCC,
	Instruction_DEC_ZP  = 0xC6,
	Instruction_DEC_ZPX = 0xD6,
	Instruction_DEC_ABS = 0xCE,
	Instruction_DEC_ABX = 0xDE,
	Instruction_DEX_IMP = 0xCA,
	Instruction_DEY_IMP = 0x88,
	Instruction_EOR_IMM = 0x49,
	Instruction_EOR_ZP  = 0x45,
	Instruction_EOR_ZPX = 0x55,
	Instruction_EOR_ABS = 0x4D,
	Instruction_EOR_ABX = 0x5D,
	Instruction_EOR_ABY = 0x59,
	Instruction_EOR_INX = 0x41,
	Instruction_EOR_INY = 0x51,
	Instruction_INC_ZP  = 0xE6,
	Instruction_INC_ZPX = 0xF6,
	Instruction_INC_ABS = 0xEE,
	Instruction_INC_ABX = 0xFE,
	Instruction_INX_IMP = 0xE8,
	Instruction_INY_IMP = 0xC8,
	Instruction_JMP_ABS = 0x4C,
	Instruction_JMP_IND = 0x6C,
	Instruction_JSR_ABS = 0x20, // Complete
	Instruction_LDA_IMM = 0xA9, // Complete
	Instruction_LDA_ZP  = 0xA5, // Complete
	Instruction_LDA_ZPX = 0xB5, // Complete
	Instruction_LDA_ABS = 0xAD,
	Instruction_LDA_ABX = 0xBD,
	Instruction_LDA_ABY = 0xB9,
	Instruction_LDA_INX = 0xA1,
	Instruction_LDA_INY = 0xB1,
	Instruction_LDX_IMM = 0xA2, // Complete
	Instruction_LDX_ZP  = 0xA6, // Complete
	Instruction_LDX_ZPY = 0xB6,
	Instruction_LDX_ABS = 0xAE,
	Instruction_LDX_ABY = 0xBE,
	Instruction_LDY_IMM = 0xA0, // Complete
	Instruction_LDY_ZP  = 0xA4, // Complete
	Instruction_LDY_ZPX = 0xB4,
	Instruction_LDY_ABS = 0xAC,
	Instruction_LDY_ABX = 0xBC,
	Instruction_LSR_ACC = 0x4A,
	Instruction_LSR_ZP  = 0x46,
	Instruction_LSR_ZPX = 0x56,
	Instruction_LSR_ABS = 0x4E,
	Instruction_LSR_ABX = 0x5E,
	Instruction_NOP_IMP = 0xEA, // Complete
	Instruction_ORA_IMM = 0x09,
	Instruction_ORA_ZP  = 0x05,
	Instruction_ORA_ZPX = 0x15,
	Instruction_ORA_ABS = 0x0D,
	Instruction_ORA_ABX = 0x1D,
	Instruction_ORA_INX = 0x01,
	Instruction_ORA_INY = 0x11,
	Instruction_PHA_IMP = 0x48,
	Instruction_PHP_IMP = 0x08,
	Instruction_PLA_IMP = 0x68,
	Instruction_PLP_IMP = 0x28,
	Instruction_ROL_ACC = 0x2A,
	Instruction_ROL_ZP  = 0x26,
	Instruction_ROL_ZPX = 0x36,
	Instruction_ROL_ABS = 0x2E,
	Instruction_ROL_ABX = 0x3E,
	Instruction_ROR_ACC = 0x6A,
	Instruction_ROR_ZP  = 0x66,
	Instruction_ROR_ZPX = 0x76,
	Instruction_ROR_ABS = 0x6E,
	Instruction_ROR_ABX = 0x7E,
	Instruction_RTI_IMP = 0x40,
	Instruction_RTS_IMP = 0x60,
	Instruction_SBC_IMM = 0xE9,
	Instruction_SBC_ZP  = 0xE5,
	Instruction_SBC_ZPX = 0xF5,
	Instruction_SBC_ABS = 0xED,
	Instruction_SBC_ABX = 0xFD,
	Instruction_SBC_ABY = 0xF9,
	Instruction_SBC_INX = 0xE1,
	Instruction_SBC_INY = 0xF1,
	Instruction_SEC_IMP = 0x38,
	Instruction_SED_IMP = 0xF8,
	Instruction_SEI_IMP = 0x78,
	Instruction_STA_ZP  = 0x85, // Complete
	Instruction_STA_ZPX = 0x95, // Complete
	Instruction_STA_ABS = 0x8D,
	Instruction_STA_ABX = 0x9D,
	Instruction_STA_ABY = 0x99,
	Instruction_STA_INX = 0x81,
	Instruction_STA_INY = 0x91,
	Instruction_STX_ZP  = 0x86, // Complete
	Instruction_STX_ZPY = 0x96, // Complete
	Instruction_STX_ABS = 0x8E,
	Instruction_STY_ZP  = 0x84, // Complete
	Instruction_STY_ZPX = 0x94, // Complete
	Instruction_STY_ABS = 0x8C,
	Instruction_TAX_IMP = 0xAA,
	Instruction_TAY_IMP = 0xA8,
	Instruction_TSX_IMP = 0xBA,
	Instruction_TXA_IMP = 0x8A,
	Instruction_TXS_IMP = 0x9A,
	Instruction_TYA_IMP = 0x98;